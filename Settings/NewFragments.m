function Fragments = NewFragments(inputIn)  if isstruct(inputIn)    Fragments = inputIn;    NOF = length(Fragments.Fragment);  else    Fragments = struct("Name", strjoin({"List ", num2str(inputIn)}, ''), "Status", "Not Simulated", "Fragment", [], ...    "Tags", [], "maxMass", [], "minMass", [], "maxArea", [], "minArea", [], "maxCd", [], "minCd", [], ...    "maxCldR", [], "minCldR", [], "maxImpartedVelocity", []);    Fragment = struct("Mass",[],"Area",[],"Cd",[],"CldR",[],"ImpartedVelocity", [], "Alpha", [], "Beta", [], ...    "Position", [], "Velocity", [], "Acceleration", [], "Time", [], "ImpactPosition", [], "ImpactVelocity", [], ...    "ImpactAcceleration", [], "ImpactTime", [], "NumberOfSteps", []);    Fragments.Tags = {};    NOF = 10;  endif    do    choice = menu("Create fragments", {"Name", "Number of fragments", "Characteristics..", "Tags..", "Save"});    switch choice      case 0        if isstruct(inputIn)          Fragments = inputIn;        else          Fragments = [];        endif      case 1        Fragments.Name = cell2mat(inputdlg({"Name:"},"Name of list of fragments",1,{Fragments.Name}));
      case 2        newNOF = str2double(inputdlg({"Number of fragments:"},"NOF",1,{num2str(NOF)}));        if isnan(newNOF)          waitfor(msgbox("Invalid number"));        else          NOF = newNOF;        endif
      case 3        tmp = str2double(inputdlg({"Min weight:","Max weight:","Min area:","Max area:","Min Cd:","Max Cd:","Min CdlRatio:",...        "Max CdlRatio:","Max imparted velocity:"},"Characteristics",1,{num2str(Fragments.minMass),num2str(Fragments.maxMass),...        num2str(Fragments.minArea),num2str(Fragments.maxArea),num2str(Fragments.minCd),num2str(Fragments.maxCd),...        num2str(Fragments.minCldR),num2str(Fragments.maxCldR),num2str(Fragments.maxImpartedVelocity)}));        if !isempty(tmp)          Fragments.minMass=tmp(1);          Fragments.maxMass=tmp(2);          Fragments.minArea=tmp(3);          Fragments.maxArea=tmp(4);          Fragments.minCd=tmp(5);          Fragments.maxCd=tmp(6);          Fragments.minCldR=tmp(7);          Fragments.maxCldR=tmp(8);          Fragments.maxImpartedVelocity=tmp(9);        endif      case 4        Fragments.Tags = strsplit(cell2mat(inputdlg({"Tags separated by semi-colon (;):"},"Tags",1,{strjoin(Fragments.Tags,";")})),";");      case 5        if NOF > 0 && !isempty(Fragments.minMass) && !isempty(Fragments.maxMass) && !isempty(Fragments.minArea) && ...        !isempty(Fragments.maxArea) && !isempty(Fragments.minCd) && !isempty(Fragments.maxCd) && !isempty(Fragments.minCldR) && ...        !isempty(Fragments.maxCldR) && !isempty(Fragments.maxImpartedVelocity) && !isnan(Fragments.minMass) && ...        !isnan(Fragments.maxMass) && !isnan(Fragments.minArea) && !isnan(Fragments.maxArea) && !isnan(Fragments.minCd) && ...        !isnan(Fragments.maxCd) && !isnan(Fragments.minCldR) && !isnan(Fragments.maxCldR) && !isnan(Fragments.maxImpartedVelocity)        Mass = rand(1,NOF)*(Fragments.maxMass - Fragments.minMass) + Fragments.minMass;        Area = rand(1,NOF)*(Fragments.maxArea - Fragments.minArea) + Fragments.minArea;        Cd = rand(1,NOF)*(Fragments.maxCd - Fragments.minCd) + Fragments.minCd;        CldR = rand(1,NOF)*(Fragments.maxCldR - Fragments.minCldR) + Fragments.minCldR;        ImpartedVelocity = rand(1,NOF)*Fragments.maxImpartedVelocity;        Beta = (rand(1,NOF)-0.5)*360;        Alpha = rand(1,NOF)*180;        for i = [1:NOF]          Fragment(i).Mass = Mass(i);          Fragment(i).Area = Area(i);          Fragment(i).Cd = Cd(i);          Fragment(i).CldR = CldR(i);          Fragment(i).ImpartedVelocity = ImpartedVelocity(i);          Fragment(i).Beta = Beta(i);          Fragment(i).Alpha = Alpha(i);        endfor        Fragments.Fragment = Fragment;      else        if isstruct(inputIn)          Fragments = inpuIn;        else          Fragments = [];        endif
      endif    endswitch  until choice == 0 || choice == 5endfunction